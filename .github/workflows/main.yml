name: Deploy revised app to Kubernetes

on:
  push:
    branches: [ master ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU (optional, for multi-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (optional, for multi-arch builds)
        uses: docker/setup-buildx-action@v3

      - name: Extract version from commit message and update Deployment
        run: |
          VERSION=$(git log -1 --pretty=%B | grep -Eo '[0-9]+\.[0-9]+')  # Capture digits separated by a dot
          if [[ -z "$VERSION" ]]; then
            echo "No version found in commit message. Using 'latest' tag."
            VERSION="latest"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV  # Set environment variable

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          push: true
          platforms: linux/arm64 
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ env.VERSION }}"

      - name: Pull and Deploy App
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_MACHINE_IP }}
          username: ${{ secrets.REMOTE_MACHINE_USER }}
          key: ${{ secrets.REMOTE_MACHINE_KEY }}
          port: ${{ secrets.REMOTE_MACHINE_PORT }}
          script: |
            git pull https://github.com/eli-pavlov/realtime-cicd-project.git
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:${{ env.VERSION }}
            sed -i "s/elipavlov\/rtproject:latest/elipavlov\/rtproject:${{ env.VERSION }}/g" ./deployment.yaml  # Replace placeholder with version
            sed -i "s/compliment-generator-[0-9]\+\.[0-9]\+:/compliment-generator-${{ env.VERSION }}:/g" ./deployment.yaml
            echo "Modified deployment.yaml with version: ${{ env.VERSION }}"
            kubectl apply -f deployment.yaml
