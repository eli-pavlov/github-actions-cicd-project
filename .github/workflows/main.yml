on:
  push:
    branches: [development, main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  pull-requests: read

jobs:
  SonarCloud-CodeQuality-Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Analyze with SonarCloud
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
            -Dsonar.python.version=3.9
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.verbose=true

  SNYK-StaticSecurity-Analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run Snyk to check IAC files for issues
        uses: snyk/actions/iac@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --report

  Build-and-deploy:
    runs-on: ubuntu-latest
    needs: [SonarCloud-CodeQuality-Analysis, SNYK-StaticSecurity-Analysis]

    # âœ… Only apply manual approval when deploying to main
    if: github.ref == 'refs/heads/main'

    environment:
      name: production
      # required_reviewers and wait_timer configured in GitHub UI

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: '20.0'

      - name: Set application version
        run: |
          VERSION=$(git log -1 --pretty=%B | grep -Eo '[0-9]+\.[0-9]+' | head -n 1)
          if [[ -z "$VERSION" ]]; then
            VERSION=$(git rev-parse --short HEAD)
            echo "No version found in commit. Using commit SHA: $VERSION"
          fi
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          push: true
          platforms: linux/arm64
          tags: "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest"

      - name: Pull and Deploy App
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_MACHINE_IP }}
          username: ${{ secrets.REMOTE_MACHINE_USER }}
          key: ${{ secrets.REMOTE_MACHINE_KEY }}
          port: ${{ secrets.REMOTE_MACHINE_PORT }}
          script: |
            git pull https://github.com/${{ secrets.GIT_USERNAME }}/github-actions-cicd-project.git
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest
            sed -i "s|version: \"latest\"|version: \"${{ env.VERSION }}\"|g" ./deployment.yaml
            sed -i "s|image: \"latest\"|image: "${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.APP_NAME }}:latest"|g" ./deployment.yaml
            echo "Modified deployment.yaml with version: ${{ env.VERSION }}"
            kubectl apply -f deployment.yaml
            git reset --hard HEAD
